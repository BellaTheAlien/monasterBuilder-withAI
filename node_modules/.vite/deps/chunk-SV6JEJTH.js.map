{
  "version": 3,
  "sources": ["../../base64-js/index.js", "../../@langchain/core/dist/utils/js-sha1/hash.js", "../../@langchain/core/dist/utils/js-sha256/hash.js", "../../@langchain/core/dist/caches/base.js", "../../js-tiktoken/dist/chunk-ZDNLBERF.js", "../../@langchain/core/dist/utils/tiktoken.js", "../../@langchain/core/dist/language_models/base.js"],
  "sourcesContent": ["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "// @ts-nocheck\n// Inlined to deal with portability issues with importing crypto module\n/*\n * [js-sha1]{@link https://github.com/emn178/js-sha1}\n *\n * @version 0.6.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n\"use strict\";\nvar root = typeof window === \"object\" ? window : {};\nvar HEX_CHARS = \"0123456789abcdef\".split(\"\");\nvar EXTRA = [-2147483648, 8388608, 32768, 128];\nvar SHIFT = [24, 16, 8, 0];\nvar OUTPUT_TYPES = [\"hex\", \"array\", \"digest\", \"arrayBuffer\"];\nvar blocks = [];\nfunction Sha1(sharedMemory) {\n    if (sharedMemory) {\n        blocks[0] =\n            blocks[16] =\n                blocks[1] =\n                    blocks[2] =\n                        blocks[3] =\n                            blocks[4] =\n                                blocks[5] =\n                                    blocks[6] =\n                                        blocks[7] =\n                                            blocks[8] =\n                                                blocks[9] =\n                                                    blocks[10] =\n                                                        blocks[11] =\n                                                            blocks[12] =\n                                                                blocks[13] =\n                                                                    blocks[14] =\n                                                                        blocks[15] =\n                                                                            0;\n        this.blocks = blocks;\n    }\n    else {\n        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    this.h0 = 0x67452301;\n    this.h1 = 0xefcdab89;\n    this.h2 = 0x98badcfe;\n    this.h3 = 0x10325476;\n    this.h4 = 0xc3d2e1f0;\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n}\nSha1.prototype.update = function (message) {\n    if (this.finalized) {\n        return;\n    }\n    var notString = typeof message !== \"string\";\n    if (notString && message.constructor === root.ArrayBuffer) {\n        message = new Uint8Array(message);\n    }\n    var code, index = 0, i, length = message.length || 0, blocks = this.blocks;\n    while (index < length) {\n        if (this.hashed) {\n            this.hashed = false;\n            blocks[0] = this.block;\n            blocks[16] =\n                blocks[1] =\n                    blocks[2] =\n                        blocks[3] =\n                            blocks[4] =\n                                blocks[5] =\n                                    blocks[6] =\n                                        blocks[7] =\n                                            blocks[8] =\n                                                blocks[9] =\n                                                    blocks[10] =\n                                                        blocks[11] =\n                                                            blocks[12] =\n                                                                blocks[13] =\n                                                                    blocks[14] =\n                                                                        blocks[15] =\n                                                                            0;\n        }\n        if (notString) {\n            for (i = this.start; index < length && i < 64; ++index) {\n                blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n            }\n        }\n        else {\n            for (i = this.start; index < length && i < 64; ++index) {\n                code = message.charCodeAt(index);\n                if (code < 0x80) {\n                    blocks[i >> 2] |= code << SHIFT[i++ & 3];\n                }\n                else if (code < 0x800) {\n                    blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n                else if (code < 0xd800 || code >= 0xe000) {\n                    blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n                else {\n                    code =\n                        0x10000 +\n                            (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n                    blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n            }\n        }\n        this.lastByteIndex = i;\n        this.bytes += i - this.start;\n        if (i >= 64) {\n            this.block = blocks[16];\n            this.start = i - 64;\n            this.hash();\n            this.hashed = true;\n        }\n        else {\n            this.start = i;\n        }\n    }\n    if (this.bytes > 4294967295) {\n        this.hBytes += (this.bytes / 4294967296) << 0;\n        this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n};\nSha1.prototype.finalize = function () {\n    if (this.finalized) {\n        return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n        if (!this.hashed) {\n            this.hash();\n        }\n        blocks[0] = this.block;\n        blocks[16] =\n            blocks[1] =\n                blocks[2] =\n                    blocks[3] =\n                        blocks[4] =\n                            blocks[5] =\n                                blocks[6] =\n                                    blocks[7] =\n                                        blocks[8] =\n                                            blocks[9] =\n                                                blocks[10] =\n                                                    blocks[11] =\n                                                        blocks[12] =\n                                                            blocks[13] =\n                                                                blocks[14] =\n                                                                    blocks[15] =\n                                                                        0;\n    }\n    blocks[14] = (this.hBytes << 3) | (this.bytes >>> 29);\n    blocks[15] = this.bytes << 3;\n    this.hash();\n};\nSha1.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4;\n    var f, j, t, blocks = this.blocks;\n    for (j = 16; j < 80; ++j) {\n        t = blocks[j - 3] ^ blocks[j - 8] ^ blocks[j - 14] ^ blocks[j - 16];\n        blocks[j] = (t << 1) | (t >>> 31);\n    }\n    for (j = 0; j < 20; j += 5) {\n        f = (b & c) | (~b & d);\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e + 1518500249 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = (a & b) | (~a & c);\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d + 1518500249 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = (e & a) | (~e & b);\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c + 1518500249 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = (d & e) | (~d & a);\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b + 1518500249 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = (c & d) | (~c & e);\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a + 1518500249 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 40; j += 5) {\n        f = b ^ c ^ d;\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e + 1859775393 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = a ^ b ^ c;\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d + 1859775393 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = e ^ a ^ b;\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c + 1859775393 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = d ^ e ^ a;\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b + 1859775393 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = c ^ d ^ e;\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a + 1859775393 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 60; j += 5) {\n        f = (b & c) | (b & d) | (c & d);\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e - 1894007588 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = (a & b) | (a & c) | (b & c);\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d - 1894007588 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = (e & a) | (e & b) | (a & b);\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c - 1894007588 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = (d & e) | (d & a) | (e & a);\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b - 1894007588 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = (c & d) | (c & e) | (d & e);\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a - 1894007588 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 80; j += 5) {\n        f = b ^ c ^ d;\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e - 899497514 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = a ^ b ^ c;\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d - 899497514 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = e ^ a ^ b;\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c - 899497514 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = d ^ e ^ a;\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b - 899497514 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = c ^ d ^ e;\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a - 899497514 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    this.h0 = (this.h0 + a) << 0;\n    this.h1 = (this.h1 + b) << 0;\n    this.h2 = (this.h2 + c) << 0;\n    this.h3 = (this.h3 + d) << 0;\n    this.h4 = (this.h4 + e) << 0;\n};\nSha1.prototype.hex = function () {\n    this.finalize();\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n    return (HEX_CHARS[(h0 >> 28) & 0x0f] +\n        HEX_CHARS[(h0 >> 24) & 0x0f] +\n        HEX_CHARS[(h0 >> 20) & 0x0f] +\n        HEX_CHARS[(h0 >> 16) & 0x0f] +\n        HEX_CHARS[(h0 >> 12) & 0x0f] +\n        HEX_CHARS[(h0 >> 8) & 0x0f] +\n        HEX_CHARS[(h0 >> 4) & 0x0f] +\n        HEX_CHARS[h0 & 0x0f] +\n        HEX_CHARS[(h1 >> 28) & 0x0f] +\n        HEX_CHARS[(h1 >> 24) & 0x0f] +\n        HEX_CHARS[(h1 >> 20) & 0x0f] +\n        HEX_CHARS[(h1 >> 16) & 0x0f] +\n        HEX_CHARS[(h1 >> 12) & 0x0f] +\n        HEX_CHARS[(h1 >> 8) & 0x0f] +\n        HEX_CHARS[(h1 >> 4) & 0x0f] +\n        HEX_CHARS[h1 & 0x0f] +\n        HEX_CHARS[(h2 >> 28) & 0x0f] +\n        HEX_CHARS[(h2 >> 24) & 0x0f] +\n        HEX_CHARS[(h2 >> 20) & 0x0f] +\n        HEX_CHARS[(h2 >> 16) & 0x0f] +\n        HEX_CHARS[(h2 >> 12) & 0x0f] +\n        HEX_CHARS[(h2 >> 8) & 0x0f] +\n        HEX_CHARS[(h2 >> 4) & 0x0f] +\n        HEX_CHARS[h2 & 0x0f] +\n        HEX_CHARS[(h3 >> 28) & 0x0f] +\n        HEX_CHARS[(h3 >> 24) & 0x0f] +\n        HEX_CHARS[(h3 >> 20) & 0x0f] +\n        HEX_CHARS[(h3 >> 16) & 0x0f] +\n        HEX_CHARS[(h3 >> 12) & 0x0f] +\n        HEX_CHARS[(h3 >> 8) & 0x0f] +\n        HEX_CHARS[(h3 >> 4) & 0x0f] +\n        HEX_CHARS[h3 & 0x0f] +\n        HEX_CHARS[(h4 >> 28) & 0x0f] +\n        HEX_CHARS[(h4 >> 24) & 0x0f] +\n        HEX_CHARS[(h4 >> 20) & 0x0f] +\n        HEX_CHARS[(h4 >> 16) & 0x0f] +\n        HEX_CHARS[(h4 >> 12) & 0x0f] +\n        HEX_CHARS[(h4 >> 8) & 0x0f] +\n        HEX_CHARS[(h4 >> 4) & 0x0f] +\n        HEX_CHARS[h4 & 0x0f]);\n};\nSha1.prototype.toString = Sha1.prototype.hex;\nSha1.prototype.digest = function () {\n    this.finalize();\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n    return [\n        (h0 >> 24) & 0xff,\n        (h0 >> 16) & 0xff,\n        (h0 >> 8) & 0xff,\n        h0 & 0xff,\n        (h1 >> 24) & 0xff,\n        (h1 >> 16) & 0xff,\n        (h1 >> 8) & 0xff,\n        h1 & 0xff,\n        (h2 >> 24) & 0xff,\n        (h2 >> 16) & 0xff,\n        (h2 >> 8) & 0xff,\n        h2 & 0xff,\n        (h3 >> 24) & 0xff,\n        (h3 >> 16) & 0xff,\n        (h3 >> 8) & 0xff,\n        h3 & 0xff,\n        (h4 >> 24) & 0xff,\n        (h4 >> 16) & 0xff,\n        (h4 >> 8) & 0xff,\n        h4 & 0xff,\n    ];\n};\nSha1.prototype.array = Sha1.prototype.digest;\nSha1.prototype.arrayBuffer = function () {\n    this.finalize();\n    var buffer = new ArrayBuffer(20);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    return buffer;\n};\nlet hasLoggedWarning = false;\n/**\n * @deprecated Use `makeDefaultKeyEncoder()` to create a custom key encoder.\n * This function will be removed in a future version.\n */\nexport const insecureHash = (message) => {\n    if (!hasLoggedWarning) {\n        console.warn([\n            `The default method for hashing keys is insecure and will be replaced in a future version,`,\n            `but hasn't been replaced yet as to not break existing caches. It's recommended that you use`,\n            `a more secure hashing algorithm to avoid cache poisoning.`,\n            ``,\n            `See this page for more information:`,\n            `|`,\n            `└> https://js.langchain.com/docs/troubleshooting/warnings/insecure-cache-algorithm`,\n        ].join(\"\\n\"));\n        hasLoggedWarning = true;\n    }\n    return new Sha1(true).update(message)[\"hex\"]();\n};\n", "// @ts-nocheck\n// Inlined to deal with portability issues with importing crypto module\n/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.11.1\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2025\n * @license MIT\n */\n/*jslint bitwise: true */\n\"use strict\";\nvar HEX_CHARS = \"0123456789abcdef\".split(\"\");\nvar EXTRA = [-2147483648, 8388608, 32768, 128];\nvar SHIFT = [24, 16, 8, 0];\nvar K = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1,\n    0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786,\n    0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n    0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,\n    0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a,\n    0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2,\n];\nvar OUTPUT_TYPES = [\"hex\", \"array\", \"digest\", \"arrayBuffer\"];\nvar blocks = [];\nfunction Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n        blocks[0] =\n            blocks[16] =\n                blocks[1] =\n                    blocks[2] =\n                        blocks[3] =\n                            blocks[4] =\n                                blocks[5] =\n                                    blocks[6] =\n                                        blocks[7] =\n                                            blocks[8] =\n                                                blocks[9] =\n                                                    blocks[10] =\n                                                        blocks[11] =\n                                                            blocks[12] =\n                                                                blocks[13] =\n                                                                    blocks[14] =\n                                                                        blocks[15] =\n                                                                            0;\n        this.blocks = blocks;\n    }\n    else {\n        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    if (is224) {\n        this.h0 = 0xc1059ed8;\n        this.h1 = 0x367cd507;\n        this.h2 = 0x3070dd17;\n        this.h3 = 0xf70e5939;\n        this.h4 = 0xffc00b31;\n        this.h5 = 0x68581511;\n        this.h6 = 0x64f98fa7;\n        this.h7 = 0xbefa4fa4;\n    }\n    else {\n        // 256\n        this.h0 = 0x6a09e667;\n        this.h1 = 0xbb67ae85;\n        this.h2 = 0x3c6ef372;\n        this.h3 = 0xa54ff53a;\n        this.h4 = 0x510e527f;\n        this.h5 = 0x9b05688c;\n        this.h6 = 0x1f83d9ab;\n        this.h7 = 0x5be0cd19;\n    }\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n}\nSha256.prototype.update = function (message) {\n    if (this.finalized) {\n        return;\n    }\n    var notString, type = typeof message;\n    if (type !== \"string\") {\n        if (type === \"object\") {\n            if (message === null) {\n                throw new Error(ERROR);\n            }\n            else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n                message = new Uint8Array(message);\n            }\n            else if (!Array.isArray(message)) {\n                if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n                    throw new Error(ERROR);\n                }\n            }\n        }\n        else {\n            throw new Error(ERROR);\n        }\n        notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n    while (index < length) {\n        if (this.hashed) {\n            this.hashed = false;\n            blocks[0] = this.block;\n            this.block =\n                blocks[16] =\n                    blocks[1] =\n                        blocks[2] =\n                            blocks[3] =\n                                blocks[4] =\n                                    blocks[5] =\n                                        blocks[6] =\n                                            blocks[7] =\n                                                blocks[8] =\n                                                    blocks[9] =\n                                                        blocks[10] =\n                                                            blocks[11] =\n                                                                blocks[12] =\n                                                                    blocks[13] =\n                                                                        blocks[14] =\n                                                                            blocks[15] =\n                                                                                0;\n        }\n        if (notString) {\n            for (i = this.start; index < length && i < 64; ++index) {\n                blocks[i >>> 2] |= message[index] << SHIFT[i++ & 3];\n            }\n        }\n        else {\n            for (i = this.start; index < length && i < 64; ++index) {\n                code = message.charCodeAt(index);\n                if (code < 0x80) {\n                    blocks[i >>> 2] |= code << SHIFT[i++ & 3];\n                }\n                else if (code < 0x800) {\n                    blocks[i >>> 2] |= (0xc0 | (code >>> 6)) << SHIFT[i++ & 3];\n                    blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n                else if (code < 0xd800 || code >= 0xe000) {\n                    blocks[i >>> 2] |= (0xe0 | (code >>> 12)) << SHIFT[i++ & 3];\n                    blocks[i >>> 2] |= (0x80 | ((code >>> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n                else {\n                    code =\n                        0x10000 +\n                            (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n                    blocks[i >>> 2] |= (0xf0 | (code >>> 18)) << SHIFT[i++ & 3];\n                    blocks[i >>> 2] |= (0x80 | ((code >>> 12) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >>> 2] |= (0x80 | ((code >>> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n            }\n        }\n        this.lastByteIndex = i;\n        this.bytes += i - this.start;\n        if (i >= 64) {\n            this.block = blocks[16];\n            this.start = i - 64;\n            this.hash();\n            this.hashed = true;\n        }\n        else {\n            this.start = i;\n        }\n    }\n    if (this.bytes > 4294967295) {\n        this.hBytes += (this.bytes / 4294967296) << 0;\n        this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n};\nSha256.prototype.finalize = function () {\n    if (this.finalized) {\n        return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >>> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n        if (!this.hashed) {\n            this.hash();\n        }\n        blocks[0] = this.block;\n        blocks[16] =\n            blocks[1] =\n                blocks[2] =\n                    blocks[3] =\n                        blocks[4] =\n                            blocks[5] =\n                                blocks[6] =\n                                    blocks[7] =\n                                        blocks[8] =\n                                            blocks[9] =\n                                                blocks[10] =\n                                                    blocks[11] =\n                                                        blocks[12] =\n                                                            blocks[13] =\n                                                                blocks[14] =\n                                                                    blocks[15] =\n                                                                        0;\n    }\n    blocks[14] = (this.hBytes << 3) | (this.bytes >>> 29);\n    blocks[15] = this.bytes << 3;\n    this.hash();\n};\nSha256.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6, h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n    for (j = 16; j < 64; ++j) {\n        // rightrotate\n        t1 = blocks[j - 15];\n        s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n        t1 = blocks[j - 2];\n        s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\n        blocks[j] = (blocks[j - 16] + s0 + blocks[j - 7] + s1) << 0;\n    }\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n        if (this.first) {\n            if (this.is224) {\n                ab = 300032;\n                t1 = blocks[0] - 1413257819;\n                h = (t1 - 150054599) << 0;\n                d = (t1 + 24177077) << 0;\n            }\n            else {\n                ab = 704751109;\n                t1 = blocks[0] - 210244248;\n                h = (t1 - 1521486534) << 0;\n                d = (t1 + 143694565) << 0;\n            }\n            this.first = false;\n        }\n        else {\n            s0 =\n                ((a >>> 2) | (a << 30)) ^\n                    ((a >>> 13) | (a << 19)) ^\n                    ((a >>> 22) | (a << 10));\n            s1 =\n                ((e >>> 6) | (e << 26)) ^\n                    ((e >>> 11) | (e << 21)) ^\n                    ((e >>> 25) | (e << 7));\n            ab = a & b;\n            maj = ab ^ (a & c) ^ bc;\n            ch = (e & f) ^ (~e & g);\n            t1 = h + s1 + ch + K[j] + blocks[j];\n            t2 = s0 + maj;\n            h = (d + t1) << 0;\n            d = (t1 + t2) << 0;\n        }\n        s0 =\n            ((d >>> 2) | (d << 30)) ^\n                ((d >>> 13) | (d << 19)) ^\n                ((d >>> 22) | (d << 10));\n        s1 =\n            ((h >>> 6) | (h << 26)) ^\n                ((h >>> 11) | (h << 21)) ^\n                ((h >>> 25) | (h << 7));\n        da = d & a;\n        maj = da ^ (d & b) ^ ab;\n        ch = (g & h) ^ (~g & e);\n        t1 = f + s1 + ch + K[j + 1] + blocks[j + 1];\n        t2 = s0 + maj;\n        g = (c + t1) << 0;\n        c = (t1 + t2) << 0;\n        s0 =\n            ((c >>> 2) | (c << 30)) ^\n                ((c >>> 13) | (c << 19)) ^\n                ((c >>> 22) | (c << 10));\n        s1 =\n            ((g >>> 6) | (g << 26)) ^\n                ((g >>> 11) | (g << 21)) ^\n                ((g >>> 25) | (g << 7));\n        cd = c & d;\n        maj = cd ^ (c & a) ^ da;\n        ch = (f & g) ^ (~f & h);\n        t1 = e + s1 + ch + K[j + 2] + blocks[j + 2];\n        t2 = s0 + maj;\n        f = (b + t1) << 0;\n        b = (t1 + t2) << 0;\n        s0 =\n            ((b >>> 2) | (b << 30)) ^\n                ((b >>> 13) | (b << 19)) ^\n                ((b >>> 22) | (b << 10));\n        s1 =\n            ((f >>> 6) | (f << 26)) ^\n                ((f >>> 11) | (f << 21)) ^\n                ((f >>> 25) | (f << 7));\n        bc = b & c;\n        maj = bc ^ (b & d) ^ cd;\n        ch = (f & g) ^ (~f & h);\n        t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n        t2 = s0 + maj;\n        e = (a + t1) << 0;\n        a = (t1 + t2) << 0;\n        this.chromeBugWorkAround = true;\n    }\n    this.h0 = (this.h0 + a) << 0;\n    this.h1 = (this.h1 + b) << 0;\n    this.h2 = (this.h2 + c) << 0;\n    this.h3 = (this.h3 + d) << 0;\n    this.h4 = (this.h4 + e) << 0;\n    this.h5 = (this.h5 + f) << 0;\n    this.h6 = (this.h6 + g) << 0;\n    this.h7 = (this.h7 + h) << 0;\n};\nSha256.prototype.hex = function () {\n    this.finalize();\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5, h6 = this.h6, h7 = this.h7;\n    var hex = HEX_CHARS[(h0 >>> 28) & 0x0f] +\n        HEX_CHARS[(h0 >>> 24) & 0x0f] +\n        HEX_CHARS[(h0 >>> 20) & 0x0f] +\n        HEX_CHARS[(h0 >>> 16) & 0x0f] +\n        HEX_CHARS[(h0 >>> 12) & 0x0f] +\n        HEX_CHARS[(h0 >>> 8) & 0x0f] +\n        HEX_CHARS[(h0 >>> 4) & 0x0f] +\n        HEX_CHARS[h0 & 0x0f] +\n        HEX_CHARS[(h1 >>> 28) & 0x0f] +\n        HEX_CHARS[(h1 >>> 24) & 0x0f] +\n        HEX_CHARS[(h1 >>> 20) & 0x0f] +\n        HEX_CHARS[(h1 >>> 16) & 0x0f] +\n        HEX_CHARS[(h1 >>> 12) & 0x0f] +\n        HEX_CHARS[(h1 >>> 8) & 0x0f] +\n        HEX_CHARS[(h1 >>> 4) & 0x0f] +\n        HEX_CHARS[h1 & 0x0f] +\n        HEX_CHARS[(h2 >>> 28) & 0x0f] +\n        HEX_CHARS[(h2 >>> 24) & 0x0f] +\n        HEX_CHARS[(h2 >>> 20) & 0x0f] +\n        HEX_CHARS[(h2 >>> 16) & 0x0f] +\n        HEX_CHARS[(h2 >>> 12) & 0x0f] +\n        HEX_CHARS[(h2 >>> 8) & 0x0f] +\n        HEX_CHARS[(h2 >>> 4) & 0x0f] +\n        HEX_CHARS[h2 & 0x0f] +\n        HEX_CHARS[(h3 >>> 28) & 0x0f] +\n        HEX_CHARS[(h3 >>> 24) & 0x0f] +\n        HEX_CHARS[(h3 >>> 20) & 0x0f] +\n        HEX_CHARS[(h3 >>> 16) & 0x0f] +\n        HEX_CHARS[(h3 >>> 12) & 0x0f] +\n        HEX_CHARS[(h3 >>> 8) & 0x0f] +\n        HEX_CHARS[(h3 >>> 4) & 0x0f] +\n        HEX_CHARS[h3 & 0x0f] +\n        HEX_CHARS[(h4 >>> 28) & 0x0f] +\n        HEX_CHARS[(h4 >>> 24) & 0x0f] +\n        HEX_CHARS[(h4 >>> 20) & 0x0f] +\n        HEX_CHARS[(h4 >>> 16) & 0x0f] +\n        HEX_CHARS[(h4 >>> 12) & 0x0f] +\n        HEX_CHARS[(h4 >>> 8) & 0x0f] +\n        HEX_CHARS[(h4 >>> 4) & 0x0f] +\n        HEX_CHARS[h4 & 0x0f] +\n        HEX_CHARS[(h5 >>> 28) & 0x0f] +\n        HEX_CHARS[(h5 >>> 24) & 0x0f] +\n        HEX_CHARS[(h5 >>> 20) & 0x0f] +\n        HEX_CHARS[(h5 >>> 16) & 0x0f] +\n        HEX_CHARS[(h5 >>> 12) & 0x0f] +\n        HEX_CHARS[(h5 >>> 8) & 0x0f] +\n        HEX_CHARS[(h5 >>> 4) & 0x0f] +\n        HEX_CHARS[h5 & 0x0f] +\n        HEX_CHARS[(h6 >>> 28) & 0x0f] +\n        HEX_CHARS[(h6 >>> 24) & 0x0f] +\n        HEX_CHARS[(h6 >>> 20) & 0x0f] +\n        HEX_CHARS[(h6 >>> 16) & 0x0f] +\n        HEX_CHARS[(h6 >>> 12) & 0x0f] +\n        HEX_CHARS[(h6 >>> 8) & 0x0f] +\n        HEX_CHARS[(h6 >>> 4) & 0x0f] +\n        HEX_CHARS[h6 & 0x0f];\n    if (!this.is224) {\n        hex +=\n            HEX_CHARS[(h7 >>> 28) & 0x0f] +\n                HEX_CHARS[(h7 >>> 24) & 0x0f] +\n                HEX_CHARS[(h7 >>> 20) & 0x0f] +\n                HEX_CHARS[(h7 >>> 16) & 0x0f] +\n                HEX_CHARS[(h7 >>> 12) & 0x0f] +\n                HEX_CHARS[(h7 >>> 8) & 0x0f] +\n                HEX_CHARS[(h7 >>> 4) & 0x0f] +\n                HEX_CHARS[h7 & 0x0f];\n    }\n    return hex;\n};\nSha256.prototype.toString = Sha256.prototype.hex;\nSha256.prototype.digest = function () {\n    this.finalize();\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5, h6 = this.h6, h7 = this.h7;\n    var arr = [\n        (h0 >>> 24) & 0xff,\n        (h0 >>> 16) & 0xff,\n        (h0 >>> 8) & 0xff,\n        h0 & 0xff,\n        (h1 >>> 24) & 0xff,\n        (h1 >>> 16) & 0xff,\n        (h1 >>> 8) & 0xff,\n        h1 & 0xff,\n        (h2 >>> 24) & 0xff,\n        (h2 >>> 16) & 0xff,\n        (h2 >>> 8) & 0xff,\n        h2 & 0xff,\n        (h3 >>> 24) & 0xff,\n        (h3 >>> 16) & 0xff,\n        (h3 >>> 8) & 0xff,\n        h3 & 0xff,\n        (h4 >>> 24) & 0xff,\n        (h4 >>> 16) & 0xff,\n        (h4 >>> 8) & 0xff,\n        h4 & 0xff,\n        (h5 >>> 24) & 0xff,\n        (h5 >>> 16) & 0xff,\n        (h5 >>> 8) & 0xff,\n        h5 & 0xff,\n        (h6 >>> 24) & 0xff,\n        (h6 >>> 16) & 0xff,\n        (h6 >>> 8) & 0xff,\n        h6 & 0xff,\n    ];\n    if (!this.is224) {\n        arr.push((h7 >>> 24) & 0xff, (h7 >>> 16) & 0xff, (h7 >>> 8) & 0xff, h7 & 0xff);\n    }\n    return arr;\n};\nSha256.prototype.array = Sha256.prototype.digest;\nSha256.prototype.arrayBuffer = function () {\n    this.finalize();\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n    if (!this.is224) {\n        dataView.setUint32(28, this.h7);\n    }\n    return buffer;\n};\nexport const sha256 = (...strings) => {\n    return new Sha256(false, true).update(strings.join(\"\")).hex();\n};\n", "import { insecureHash } from \"../utils/hash.js\";\nimport { mapStoredMessageToChatMessage } from \"../messages/utils.js\";\n/**\n * This cache key should be consistent across all versions of LangChain.\n * It is currently NOT consistent across versions of LangChain.\n *\n * A huge benefit of having a remote cache (like redis) is that you can\n * access the cache from different processes/machines. The allows you to\n * separate concerns and scale horizontally.\n *\n * TODO: Make cache key consistent across versions of LangChain.\n *\n * @deprecated Use `makeDefaultKeyEncoder()` to create a custom key encoder.\n * This function will be removed in a future version.\n */\nexport const getCacheKey = (...strings) => insecureHash(strings.join(\"_\"));\nexport function deserializeStoredGeneration(storedGeneration) {\n    if (storedGeneration.message !== undefined) {\n        return {\n            text: storedGeneration.text,\n            message: mapStoredMessageToChatMessage(storedGeneration.message),\n        };\n    }\n    else {\n        return { text: storedGeneration.text };\n    }\n}\nexport function serializeGeneration(generation) {\n    const serializedValue = {\n        text: generation.text,\n    };\n    if (generation.message !== undefined) {\n        serializedValue.message = generation.message.toDict();\n    }\n    return serializedValue;\n}\n/**\n * Base class for all caches. All caches should extend this class.\n */\nexport class BaseCache {\n    constructor() {\n        // For backwards compatibility, we use a default key encoder\n        // that uses SHA-1 to hash the prompt and LLM key. This will also print a warning\n        // about the security implications of using SHA-1 as a cache key.\n        Object.defineProperty(this, \"keyEncoder\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: getCacheKey\n        });\n    }\n    /**\n     * Sets a custom key encoder function for the cache.\n     * This function should take a prompt and an LLM key and return a string\n     * that will be used as the cache key.\n     * @param keyEncoderFn The custom key encoder function.\n     */\n    makeDefaultKeyEncoder(keyEncoderFn) {\n        this.keyEncoder = keyEncoderFn;\n    }\n}\nconst GLOBAL_MAP = new Map();\n/**\n * A cache for storing LLM generations that stores data in memory.\n */\nexport class InMemoryCache extends BaseCache {\n    constructor(map) {\n        super();\n        Object.defineProperty(this, \"cache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.cache = map ?? new Map();\n    }\n    /**\n     * Retrieves data from the cache using a prompt and an LLM key. If the\n     * data is not found, it returns null.\n     * @param prompt The prompt used to find the data.\n     * @param llmKey The LLM key used to find the data.\n     * @returns The data corresponding to the prompt and LLM key, or null if not found.\n     */\n    lookup(prompt, llmKey) {\n        return Promise.resolve(this.cache.get(this.keyEncoder(prompt, llmKey)) ?? null);\n    }\n    /**\n     * Updates the cache with new data using a prompt and an LLM key.\n     * @param prompt The prompt used to store the data.\n     * @param llmKey The LLM key used to store the data.\n     * @param value The data to be stored.\n     */\n    async update(prompt, llmKey, value) {\n        this.cache.set(this.keyEncoder(prompt, llmKey), value);\n    }\n    /**\n     * Returns a global instance of InMemoryCache using a predefined global\n     * map as the initial cache.\n     * @returns A global instance of InMemoryCache.\n     */\n    static global() {\n        return new InMemoryCache(GLOBAL_MAP);\n    }\n}\n", "import base64 from 'base64-js';\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/utils.ts\nfunction never(_) {\n}\nfunction bytePairMerge(piece, ranks) {\n  let parts = Array.from(\n    { length: piece.length },\n    (_, i) => ({ start: i, end: i + 1 })\n  );\n  while (parts.length > 1) {\n    let minRank = null;\n    for (let i = 0; i < parts.length - 1; i++) {\n      const slice = piece.slice(parts[i].start, parts[i + 1].end);\n      const rank = ranks.get(slice.join(\",\"));\n      if (rank == null)\n        continue;\n      if (minRank == null || rank < minRank[0]) {\n        minRank = [rank, i];\n      }\n    }\n    if (minRank != null) {\n      const i = minRank[1];\n      parts[i] = { start: parts[i].start, end: parts[i + 1].end };\n      parts.splice(i + 1, 1);\n    } else {\n      break;\n    }\n  }\n  return parts;\n}\nfunction bytePairEncode(piece, ranks) {\n  if (piece.length === 1)\n    return [ranks.get(piece.join(\",\"))];\n  return bytePairMerge(piece, ranks).map((p) => ranks.get(piece.slice(p.start, p.end).join(\",\"))).filter((x) => x != null);\n}\nfunction escapeRegex(str) {\n  return str.replace(/[\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n}\nvar _Tiktoken = class {\n  /** @internal */\n  specialTokens;\n  /** @internal */\n  inverseSpecialTokens;\n  /** @internal */\n  patStr;\n  /** @internal */\n  textEncoder = new TextEncoder();\n  /** @internal */\n  textDecoder = new TextDecoder(\"utf-8\");\n  /** @internal */\n  rankMap = /* @__PURE__ */ new Map();\n  /** @internal */\n  textMap = /* @__PURE__ */ new Map();\n  constructor(ranks, extendedSpecialTokens) {\n    this.patStr = ranks.pat_str;\n    const uncompressed = ranks.bpe_ranks.split(\"\\n\").filter(Boolean).reduce((memo, x) => {\n      const [_, offsetStr, ...tokens] = x.split(\" \");\n      const offset = Number.parseInt(offsetStr, 10);\n      tokens.forEach((token, i) => memo[token] = offset + i);\n      return memo;\n    }, {});\n    for (const [token, rank] of Object.entries(uncompressed)) {\n      const bytes = base64.toByteArray(token);\n      this.rankMap.set(bytes.join(\",\"), rank);\n      this.textMap.set(rank, bytes);\n    }\n    this.specialTokens = { ...ranks.special_tokens, ...extendedSpecialTokens };\n    this.inverseSpecialTokens = Object.entries(this.specialTokens).reduce((memo, [text, rank]) => {\n      memo[rank] = this.textEncoder.encode(text);\n      return memo;\n    }, {});\n  }\n  encode(text, allowedSpecial = [], disallowedSpecial = \"all\") {\n    const regexes = new RegExp(this.patStr, \"ug\");\n    const specialRegex = _Tiktoken.specialTokenRegex(\n      Object.keys(this.specialTokens)\n    );\n    const ret = [];\n    const allowedSpecialSet = new Set(\n      allowedSpecial === \"all\" ? Object.keys(this.specialTokens) : allowedSpecial\n    );\n    const disallowedSpecialSet = new Set(\n      disallowedSpecial === \"all\" ? Object.keys(this.specialTokens).filter(\n        (x) => !allowedSpecialSet.has(x)\n      ) : disallowedSpecial\n    );\n    if (disallowedSpecialSet.size > 0) {\n      const disallowedSpecialRegex = _Tiktoken.specialTokenRegex([\n        ...disallowedSpecialSet\n      ]);\n      const specialMatch = text.match(disallowedSpecialRegex);\n      if (specialMatch != null) {\n        throw new Error(\n          `The text contains a special token that is not allowed: ${specialMatch[0]}`\n        );\n      }\n    }\n    let start = 0;\n    while (true) {\n      let nextSpecial = null;\n      let startFind = start;\n      while (true) {\n        specialRegex.lastIndex = startFind;\n        nextSpecial = specialRegex.exec(text);\n        if (nextSpecial == null || allowedSpecialSet.has(nextSpecial[0]))\n          break;\n        startFind = nextSpecial.index + 1;\n      }\n      const end = nextSpecial?.index ?? text.length;\n      for (const match of text.substring(start, end).matchAll(regexes)) {\n        const piece = this.textEncoder.encode(match[0]);\n        const token2 = this.rankMap.get(piece.join(\",\"));\n        if (token2 != null) {\n          ret.push(token2);\n          continue;\n        }\n        ret.push(...bytePairEncode(piece, this.rankMap));\n      }\n      if (nextSpecial == null)\n        break;\n      let token = this.specialTokens[nextSpecial[0]];\n      ret.push(token);\n      start = nextSpecial.index + nextSpecial[0].length;\n    }\n    return ret;\n  }\n  decode(tokens) {\n    const res = [];\n    let length = 0;\n    for (let i2 = 0; i2 < tokens.length; ++i2) {\n      const token = tokens[i2];\n      const bytes = this.textMap.get(token) ?? this.inverseSpecialTokens[token];\n      if (bytes != null) {\n        res.push(bytes);\n        length += bytes.length;\n      }\n    }\n    const mergedArray = new Uint8Array(length);\n    let i = 0;\n    for (const bytes of res) {\n      mergedArray.set(bytes, i);\n      i += bytes.length;\n    }\n    return this.textDecoder.decode(mergedArray);\n  }\n};\nvar Tiktoken = _Tiktoken;\n__publicField(Tiktoken, \"specialTokenRegex\", (tokens) => {\n  return new RegExp(tokens.map((i) => escapeRegex(i)).join(\"|\"), \"g\");\n});\nfunction getEncodingNameForModel(model) {\n  switch (model) {\n    case \"gpt2\": {\n      return \"gpt2\";\n    }\n    case \"code-cushman-001\":\n    case \"code-cushman-002\":\n    case \"code-davinci-001\":\n    case \"code-davinci-002\":\n    case \"cushman-codex\":\n    case \"davinci-codex\":\n    case \"davinci-002\":\n    case \"text-davinci-002\":\n    case \"text-davinci-003\": {\n      return \"p50k_base\";\n    }\n    case \"code-davinci-edit-001\":\n    case \"text-davinci-edit-001\": {\n      return \"p50k_edit\";\n    }\n    case \"ada\":\n    case \"babbage\":\n    case \"babbage-002\":\n    case \"code-search-ada-code-001\":\n    case \"code-search-babbage-code-001\":\n    case \"curie\":\n    case \"davinci\":\n    case \"text-ada-001\":\n    case \"text-babbage-001\":\n    case \"text-curie-001\":\n    case \"text-davinci-001\":\n    case \"text-search-ada-doc-001\":\n    case \"text-search-babbage-doc-001\":\n    case \"text-search-curie-doc-001\":\n    case \"text-search-davinci-doc-001\":\n    case \"text-similarity-ada-001\":\n    case \"text-similarity-babbage-001\":\n    case \"text-similarity-curie-001\":\n    case \"text-similarity-davinci-001\": {\n      return \"r50k_base\";\n    }\n    case \"gpt-3.5-turbo-instruct-0914\":\n    case \"gpt-3.5-turbo-instruct\":\n    case \"gpt-3.5-turbo-16k-0613\":\n    case \"gpt-3.5-turbo-16k\":\n    case \"gpt-3.5-turbo-0613\":\n    case \"gpt-3.5-turbo-0301\":\n    case \"gpt-3.5-turbo\":\n    case \"gpt-4-32k-0613\":\n    case \"gpt-4-32k-0314\":\n    case \"gpt-4-32k\":\n    case \"gpt-4-0613\":\n    case \"gpt-4-0314\":\n    case \"gpt-4\":\n    case \"gpt-3.5-turbo-1106\":\n    case \"gpt-35-turbo\":\n    case \"gpt-4-1106-preview\":\n    case \"gpt-4-vision-preview\":\n    case \"gpt-3.5-turbo-0125\":\n    case \"gpt-4-turbo\":\n    case \"gpt-4-turbo-2024-04-09\":\n    case \"gpt-4-turbo-preview\":\n    case \"gpt-4-0125-preview\":\n    case \"text-embedding-ada-002\":\n    case \"text-embedding-3-small\":\n    case \"text-embedding-3-large\": {\n      return \"cl100k_base\";\n    }\n    case \"gpt-4o\":\n    case \"gpt-4o-2024-05-13\":\n    case \"gpt-4o-2024-08-06\":\n    case \"gpt-4o-2024-11-20\":\n    case \"gpt-4o-mini-2024-07-18\":\n    case \"gpt-4o-mini\":\n    case \"gpt-4o-search-preview\":\n    case \"gpt-4o-search-preview-2025-03-11\":\n    case \"gpt-4o-mini-search-preview\":\n    case \"gpt-4o-mini-search-preview-2025-03-11\":\n    case \"gpt-4o-audio-preview\":\n    case \"gpt-4o-audio-preview-2024-12-17\":\n    case \"gpt-4o-audio-preview-2024-10-01\":\n    case \"gpt-4o-mini-audio-preview\":\n    case \"gpt-4o-mini-audio-preview-2024-12-17\":\n    case \"o1\":\n    case \"o1-2024-12-17\":\n    case \"o1-mini\":\n    case \"o1-mini-2024-09-12\":\n    case \"o1-preview\":\n    case \"o1-preview-2024-09-12\":\n    case \"o1-pro\":\n    case \"o1-pro-2025-03-19\":\n    case \"o3\":\n    case \"o3-2025-04-16\":\n    case \"o3-mini\":\n    case \"o3-mini-2025-01-31\":\n    case \"o4-mini\":\n    case \"o4-mini-2025-04-16\":\n    case \"chatgpt-4o-latest\":\n    case \"gpt-4o-realtime\":\n    case \"gpt-4o-realtime-preview-2024-10-01\":\n    case \"gpt-4o-realtime-preview-2024-12-17\":\n    case \"gpt-4o-mini-realtime-preview\":\n    case \"gpt-4o-mini-realtime-preview-2024-12-17\":\n    case \"gpt-4.1\":\n    case \"gpt-4.1-2025-04-14\":\n    case \"gpt-4.1-mini\":\n    case \"gpt-4.1-mini-2025-04-14\":\n    case \"gpt-4.1-nano\":\n    case \"gpt-4.1-nano-2025-04-14\":\n    case \"gpt-4.5-preview\":\n    case \"gpt-4.5-preview-2025-02-27\": {\n      return \"o200k_base\";\n    }\n    default:\n      throw new Error(\"Unknown model\");\n  }\n}\n\nexport { Tiktoken, getEncodingNameForModel, never };\n", "import { Tiktoken, getEncodingNameForModel, } from \"js-tiktoken/lite\";\nimport { AsyncCaller } from \"./async_caller.js\";\nconst cache = {};\nconst caller = /* #__PURE__ */ new AsyncCaller({});\nexport async function getEncoding(encoding) {\n    if (!(encoding in cache)) {\n        cache[encoding] = caller\n            .fetch(`https://tiktoken.pages.dev/js/${encoding}.json`)\n            .then((res) => res.json())\n            .then((data) => new Tiktoken(data))\n            .catch((e) => {\n            delete cache[encoding];\n            throw e;\n        });\n    }\n    return await cache[encoding];\n}\nexport async function encodingForModel(model) {\n    return getEncoding(getEncodingNameForModel(model));\n}\n", "import { InMemoryCache } from \"../caches/base.js\";\nimport { StringPromptValue, ChatPromptValue, } from \"../prompt_values.js\";\nimport { coerceMessageLikeToMessage } from \"../messages/utils.js\";\nimport { AsyncCaller } from \"../utils/async_caller.js\";\nimport { encodingForModel } from \"../utils/tiktoken.js\";\nimport { Runnable } from \"../runnables/base.js\";\n// https://www.npmjs.com/package/js-tiktoken\nexport const getModelNameForTiktoken = (modelName) => {\n    if (modelName.startsWith(\"gpt-3.5-turbo-16k\")) {\n        return \"gpt-3.5-turbo-16k\";\n    }\n    if (modelName.startsWith(\"gpt-3.5-turbo-\")) {\n        return \"gpt-3.5-turbo\";\n    }\n    if (modelName.startsWith(\"gpt-4-32k\")) {\n        return \"gpt-4-32k\";\n    }\n    if (modelName.startsWith(\"gpt-4-\")) {\n        return \"gpt-4\";\n    }\n    if (modelName.startsWith(\"gpt-4o\")) {\n        return \"gpt-4o\";\n    }\n    return modelName;\n};\nexport const getEmbeddingContextSize = (modelName) => {\n    switch (modelName) {\n        case \"text-embedding-ada-002\":\n            return 8191;\n        default:\n            return 2046;\n    }\n};\nexport const getModelContextSize = (modelName) => {\n    switch (getModelNameForTiktoken(modelName)) {\n        case \"gpt-3.5-turbo-16k\":\n            return 16384;\n        case \"gpt-3.5-turbo\":\n            return 4096;\n        case \"gpt-4-32k\":\n            return 32768;\n        case \"gpt-4\":\n            return 8192;\n        case \"text-davinci-003\":\n            return 4097;\n        case \"text-curie-001\":\n            return 2048;\n        case \"text-babbage-001\":\n            return 2048;\n        case \"text-ada-001\":\n            return 2048;\n        case \"code-davinci-002\":\n            return 8000;\n        case \"code-cushman-001\":\n            return 2048;\n        default:\n            return 4097;\n    }\n};\n/**\n * Whether or not the input matches the OpenAI tool definition.\n * @param {unknown} tool The input to check.\n * @returns {boolean} Whether the input is an OpenAI tool definition.\n */\nexport function isOpenAITool(tool) {\n    if (typeof tool !== \"object\" || !tool)\n        return false;\n    if (\"type\" in tool &&\n        tool.type === \"function\" &&\n        \"function\" in tool &&\n        typeof tool.function === \"object\" &&\n        tool.function &&\n        \"name\" in tool.function &&\n        \"parameters\" in tool.function) {\n        return true;\n    }\n    return false;\n}\nexport const calculateMaxTokens = async ({ prompt, modelName, }) => {\n    let numTokens;\n    try {\n        numTokens = (await encodingForModel(getModelNameForTiktoken(modelName))).encode(prompt).length;\n    }\n    catch (error) {\n        console.warn(\"Failed to calculate number of tokens, falling back to approximate count\");\n        // fallback to approximate calculation if tiktoken is not available\n        // each token is ~4 characters: https://help.openai.com/en/articles/4936856-what-are-tokens-and-how-to-count-them#\n        numTokens = Math.ceil(prompt.length / 4);\n    }\n    const maxTokens = getModelContextSize(modelName);\n    return maxTokens - numTokens;\n};\nconst getVerbosity = () => false;\n/**\n * Base class for language models, chains, tools.\n */\nexport class BaseLangChain extends Runnable {\n    get lc_attributes() {\n        return {\n            callbacks: undefined,\n            verbose: undefined,\n        };\n    }\n    constructor(params) {\n        super(params);\n        /**\n         * Whether to print out response text.\n         */\n        Object.defineProperty(this, \"verbose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"callbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.verbose = params.verbose ?? getVerbosity();\n        this.callbacks = params.callbacks;\n        this.tags = params.tags ?? [];\n        this.metadata = params.metadata ?? {};\n    }\n}\n/**\n * Base class for language models.\n */\nexport class BaseLanguageModel extends BaseLangChain {\n    /**\n     * Keys that the language model accepts as call options.\n     */\n    get callKeys() {\n        return [\"stop\", \"timeout\", \"signal\", \"tags\", \"metadata\", \"callbacks\"];\n    }\n    constructor({ callbacks, callbackManager, ...params }) {\n        const { cache, ...rest } = params;\n        super({\n            callbacks: callbacks ?? callbackManager,\n            ...rest,\n        });\n        /**\n         * The async caller should be used by subclasses to make any async calls,\n         * which will thus benefit from the concurrency and retry logic.\n         */\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"cache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_encoding\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (typeof cache === \"object\") {\n            this.cache = cache;\n        }\n        else if (cache) {\n            this.cache = InMemoryCache.global();\n        }\n        else {\n            this.cache = undefined;\n        }\n        this.caller = new AsyncCaller(params ?? {});\n    }\n    /**\n     * Get the number of tokens in the content.\n     * @param content The content to get the number of tokens for.\n     * @returns The number of tokens in the content.\n     */\n    async getNumTokens(content) {\n        // Extract text content from MessageContent\n        let textContent;\n        if (typeof content === \"string\") {\n            textContent = content;\n        }\n        else {\n            /**\n             * Content is an array of MessageContentComplex\n             *\n             * ToDo(@christian-bromann): This is a temporary fix to get the number of tokens for the content.\n             * We need to find a better way to do this.\n             * @see https://github.com/langchain-ai/langchainjs/pull/8341#pullrequestreview-2933713116\n             */\n            textContent = content\n                .map((item) => {\n                if (typeof item === \"string\")\n                    return item;\n                if (item.type === \"text\" && \"text\" in item)\n                    return item.text;\n                return \"\";\n            })\n                .join(\"\");\n        }\n        // fallback to approximate calculation if tiktoken is not available\n        let numTokens = Math.ceil(textContent.length / 4);\n        if (!this._encoding) {\n            try {\n                this._encoding = await encodingForModel(\"modelName\" in this\n                    ? getModelNameForTiktoken(this.modelName)\n                    : \"gpt2\");\n            }\n            catch (error) {\n                console.warn(\"Failed to calculate number of tokens, falling back to approximate count\", error);\n            }\n        }\n        if (this._encoding) {\n            try {\n                numTokens = this._encoding.encode(textContent).length;\n            }\n            catch (error) {\n                console.warn(\"Failed to calculate number of tokens, falling back to approximate count\", error);\n            }\n        }\n        return numTokens;\n    }\n    static _convertInputToPromptValue(input) {\n        if (typeof input === \"string\") {\n            return new StringPromptValue(input);\n        }\n        else if (Array.isArray(input)) {\n            return new ChatPromptValue(input.map(coerceMessageLikeToMessage));\n        }\n        else {\n            return input;\n        }\n    }\n    /**\n     * Get the identifying parameters of the LLM.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _identifyingParams() {\n        return {};\n    }\n    /**\n     * Create a unique cache key for a specific call to a specific language model.\n     * @param callOptions Call options for the model\n     * @returns A unique cache key.\n     */\n    _getSerializedCacheKeyParametersForCall(\n    // TODO: Fix when we remove the RunnableLambda backwards compatibility shim.\n    { config, ...callOptions }) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const params = {\n            ...this._identifyingParams(),\n            ...callOptions,\n            _type: this._llmType(),\n            _model: this._modelType(),\n        };\n        const filteredEntries = Object.entries(params).filter(([_, value]) => value !== undefined);\n        const serializedEntries = filteredEntries\n            .map(([key, value]) => `${key}:${JSON.stringify(value)}`)\n            .sort()\n            .join(\",\");\n        return serializedEntries;\n    }\n    /**\n     * @deprecated\n     * Return a json-like object representing this LLM.\n     */\n    serialize() {\n        return {\n            ...this._identifyingParams(),\n            _type: this._llmType(),\n            _model: this._modelType(),\n        };\n    }\n    /**\n     * @deprecated\n     * Load an LLM from a json-like object describing it.\n     */\n    static async deserialize(_data) {\n        throw new Error(\"Use .toJSON() instead\");\n    }\n}\n"],
  "mappings": "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",
  "names": ["len", "i", "len2", "blocks", "HEX_CHARS", "EXTRA", "SHIFT", "blocks", "SHIFT", "EXTRA", "HEX_CHARS", "base64", "cache"]
}
